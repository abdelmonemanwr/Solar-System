name: Solar System Workflow

on:
    push:
        branches:
            - main
            - "features/*"
env:
    MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
    MONGO_USERNAME: "superuser"
    MONGO_PASSWORD: "SuperPassword"

jobs:
    Unit-Testing-Job:
        name: Unit Testing
        strategy:
            matrix:
                nodejs_version: [18, 19, 20]
                operating_system: [ubuntu-latest, macos-latest]
                exclude:
                    - nodejs_version: 20
                      operating_system: macos-latest
        runs-on: ${{ matrix.operating_system}}

        steps:
            # Checkout the repository, to list all the files that might be used
            - name: Checkout repository files
              uses: actions/checkout@v4

            # Install Node.js on all the supported operating systems
            - name: Setup Node.js versions ${{ matrix.nodejs_version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.nodejs_version }}

            # Install all the dependencies and packages
            - name: Install dependencies
              run: npm install

            # Run the unit tests and put id to get the test cases results generated after this phase
            - name: Run unit tests
              id: unit-test-id
              run: npm test

            # Upload the test results
            - name: Upload test results
              if: steps.unit-test-id.outcome == 'success' || steps.unit-test-id.outcome == 'failure'
              uses: actions/upload-artifact@v3
              with:
                  name: mocha-test-result
                  path: test-results.xml
                  retention-days: 7

    Code-Coverage-Job:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18

            - name: Install dependencies
              run: npm install

            - name: Check Code Coverage
              continue-on-error: true
              run: npm run coverage

            - name: Artifact test Result
              uses: actions/upload-artifact@v3
              with:
                  name: code-coverage-result
                  path: coverage
                  retention-days: 7

    docker:
        name: Containerization
        needs: [Unit-Testing-Job, Code-Coverage-Job]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: false
                  tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

            - name: Testing Docker Image
              run: | # run set of pipeline commands
                  docker images
                  docker run --name solar-system-app -d \
                        -p 3000:3000 \
                        -e MONGO_URI=$MONGO_URI \
                        -e MONGO_USERNAME=$MONGO_USERNAME \
                        -e MONGO_PASSWORD=$MONGO_PASSWORD \
                        ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
                  export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                  echo $IP
                  echo Men3m is Testing Image URL using wget
                  wget -q -O - 127.0.0.1:3000/live | grep live

            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
